Git Cheat Sheet - GitHub Repository => https://github.com/robbiesherre67/GitCmdNotes
username => robbiesherre67
Password => LilVarms**67


mkdir => creates a directory/folder
git mv <filename> <foldername> => moves a file
git blame <name of file> => blame output
git tag v1.0 => tags a filename
git tag -n => shows the version and the name of the file
git log -3 => shows the last 3 entries
git diff HEAD~2 HEAD =>  Shows the changes between two commits
git shortlog => finding contributors
git log --author=“Your name” --oneline => All commits made by yourself. Using one-liner option.

Repository =>

git remote add origin https://github.com/robbiesherre67/GitCmdNotes.git
git push -u origin main

#########
git commit -am "new file content" => ADDs the file with a message

Stashing =>
git stash push -m "new content update"
git stash list => lists the files you have stashed

#########
GIT Mergetool cmd => https://git-scm.com/docs/git-mergetool
DESCRIPTION
Use git mergetool to run one of several merge utilities to resolve merge conflicts. It is typically run after git merge.

If one or more <file> parameters are given, the merge tool program will be run to resolve differences in each file (skipping those without conflicts). Specifying a directory will include all unresolved files in that path. If no <file> names are specified, git mergetool will run the merge tool program on every file with merge conflicts.

#########
//Cherry Picking//
git cherry-pick 6767000 (unique ID SHA)
git merge-tool => opens the mergetool
master | cherry => this should "show" as you are cherry picking a file
git status -s => will show the file
git commit

#########